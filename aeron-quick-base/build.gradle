plugins {
    id 'java'
}

dependencies {
    api libs.aeronClient
    api libs.aeronDriver
    api libs.jsonMapping
    implementation project(':aeron-quick-annotations')
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'com.lmax:disruptor:4.0.0'
}

tasks.register('fatJar', Jar){
    println ":::::::::::::::::::::::::::::"
    println JavaVersion.current()
    println ":::::::::::::::::::::::::::::"
    group = "fat"
    manifest {
        attributes(
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor' : globalPackageVendor
        )
    }
    archiveClassifier.set("fat")
    from(sourceSets.main.output)
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn configurations.runtimeClasspath

    def runtimeLibs = []
    configurations.runtimeClasspath.filter { it.name.endsWith("jar") && !it.name.contains("aeron-quick-annotations") }.forEach { runtimeLibs << zipTree(it) }

    from({
        runtimeLibs
    })
}