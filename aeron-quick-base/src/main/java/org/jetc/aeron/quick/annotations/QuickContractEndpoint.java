package org.jetc.aeron.quick.annotations;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * The method marked with this annotation will be bound to an Aeron internal buffer to receive or send content through it.
 * <p>
 * It will be interpreted as receiver or sender depending on if it is found in a class marked with {@link AeronQuickReceiver @AeronQuickServer} or
 * generated by AeronQuick through {@link org.jetc.aeron.quick.AeronQuickFactory#getClientBuilder(Class contract) AeronQuickFactory.getClientBuilder(Class contract)}
 *  <p>
 * IMPORTANT!!! All the parameters will be de/serialized from/to the channels using {@link ObjectMapper#ObjectMapper() default Jackson object mapper}
 */
@Target({ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
public @interface QuickContractEndpoint {
}